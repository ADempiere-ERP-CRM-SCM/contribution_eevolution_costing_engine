--DROP VIEW RV_M_Transaction_Costing;CREATE OR REPLACE VIEW RV_M_Transaction_Costing ASSELECT t.M_Transaction_ID, t.AD_Client_ID,t.AD_Org_ID,t.MovementType,t.MovementDate,t.MovementQty,t.M_AttributeSetInstance_ID, t.M_AttributeSet_ID, t.SerNo, t.Lot, t.M_Lot_ID, t.GuaranteeDate,p.M_Product_ID,p.Value,p.Name,p.Description,p.UPC,p.SKU,p.C_UOM_ID,p.M_Product_Category_ID,p.Classification, p.Group1, p.Group2, p.Weight,p.Volume,p.VersionNo,t.DocumentNo,t.C_DocType_ID,t.M_Locator_ID, t.X, t.Y, t.Z,t.M_Warehouse_ID,t.M_InventoryLine_ID,t.M_Inventory_ID,t.M_MovementLine_ID,t.M_Movement_ID,t.M_InOutLine_ID,t.M_InOut_ID,t.M_ProductionLine_ID,t.M_ProductionPlan_ID,t.M_Production_ID,t.C_ProjectIssue_ID,t.C_Project_ID,t.PP_Cost_Collector_ID,cd.C_AcctSchema_ID,cd.M_CostType_ID,cd.M_CostElement_ID,cd.CostAdjustment,	cd.CostAdjustmentLL,	cd.CostAdjustmentDate,cd.CostAdjustmentDateLL,cd.DateAcct,cd.CumulatedQty AS BeginningQtyBalance,cd.CurrentCostPrice,cd.CurrentCostPriceLL,cd.isReversal,cd.IsSOTrx,cd.M_CostDetail_ID,cd.CumulatedAmt + cd.CumulatedAmtLL AS BeginningBalance,cd.qty,cd.Amt, cd.AmtLL, cd.CostAmt,cd.CostAmtLL,cd.CumulatedAmt,cd.CumulatedAmtLL,cd.CumulatedQty + Qty AS EndingQtyBalance,cd.CumulatedAmt + cd.CumulatedAmtLL  + CostAmt + CostAmtLL + CostAdjustment + CostAdjustmentLL AS EndingBalanceFROM M_Product p INNER JOIN RV_Transaction t ON (t.M_Product_ID=p.M_Product_ID)LEFT OUTER JOIN M_CostDetail cd ON (cd.M_Transaction_ID=t.M_Transaction_ID AND cd.M_Product_ID=p.M_Product_ID) LEFT OUTER JOIN M_CostType ct ON (ct.M_CostType_ID=cd.M_CostType_ID)LEFT OUTER JOIN M_CostElement ce ON (ce.M_CostElement_ID=cd.M_CostElement_ID);